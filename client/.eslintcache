[{"/Users/mattbrown/projects/social-elif/client/src/App.js":"1","/Users/mattbrown/projects/social-elif/client/src/components/layout/Landing.js":"2","/Users/mattbrown/projects/social-elif/client/src/components/layout/NavBar.js":"3","/Users/mattbrown/projects/social-elif/client/src/reportWebVitals.js":"4","/Users/mattbrown/projects/social-elif/client/src/components/auth/Login.js":"5","/Users/mattbrown/projects/social-elif/client/src/components/auth/Register.js":"6","/Users/mattbrown/projects/social-elif/client/src/index.js":"7"},{"size":765,"mtime":1609858825094,"results":"8","hashOfConfig":"9"},{"size":740,"mtime":1609859098296,"results":"10","hashOfConfig":"9"},{"size":540,"mtime":1609859073441,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1609799687371,"results":"12","hashOfConfig":"9"},{"size":1497,"mtime":1609862000309,"results":"13","hashOfConfig":"9"},{"size":2890,"mtime":1609862024237,"results":"14","hashOfConfig":"9"},{"size":428,"mtime":1609810187166,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"be8bbr",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/social-elif/client/src/App.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/layout/Landing.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/layout/NavBar.js",[],"/Users/mattbrown/projects/social-elif/client/src/reportWebVitals.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/auth/Login.js",["31","32"],"/Users/mattbrown/projects/social-elif/client/src/components/auth/Register.js",["33"],"import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      console.log(\"apsswords dont match\");\n    } else {\n      console.log(\"Success\", { formData });\n      //   const newUser = {\n      //     name,\n      //     email,\n      //     password,\n      //   };\n\n      //   try {\n      //     const config = {\n      //       headers: {\n      //         \"Content-Type\": \"application/json\",\n      //       },\n      //     };\n\n      //     const body = JSON.stringify(newUser);\n\n      //     const res = await axios.post(\"/api/users\", body, config);\n      //     console.log(res);\n      //   } catch (error) {\n      //     console.error(error.message);\n      //   }\n    }\n  };\n\n  return (\n    <Fragment>\n      {\" \"}\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            required\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            required\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","/Users/mattbrown/projects/social-elif/client/src/index.js",[],{"ruleId":"34","severity":1,"message":"35","line":10,"column":11,"nodeType":"36","messageId":"37","endLine":10,"endColumn":15},{"ruleId":"34","severity":1,"message":"38","line":10,"column":34,"nodeType":"36","messageId":"37","endLine":10,"endColumn":43},{"ruleId":"34","severity":1,"message":"39","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":13},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'password2' is assigned a value but never used.","'axios' is defined but never used."]