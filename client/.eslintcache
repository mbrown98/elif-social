[{"/Users/mattbrown/projects/social-elif/client/src/App.js":"1","/Users/mattbrown/projects/social-elif/client/src/components/layout/Landing.js":"2","/Users/mattbrown/projects/social-elif/client/src/components/layout/NavBar.js":"3","/Users/mattbrown/projects/social-elif/client/src/reportWebVitals.js":"4","/Users/mattbrown/projects/social-elif/client/src/components/auth/Login.js":"5","/Users/mattbrown/projects/social-elif/client/src/components/auth/Register.js":"6","/Users/mattbrown/projects/social-elif/client/src/index.js":"7","/Users/mattbrown/projects/social-elif/client/src/store.js":"8","/Users/mattbrown/projects/social-elif/client/src/reducers/index.js":"9","/Users/mattbrown/projects/social-elif/client/src/reducers/alert.js":"10","/Users/mattbrown/projects/social-elif/client/src/actions/alert.js":"11","/Users/mattbrown/projects/social-elif/client/src/components/layout/Alert.js":"12","/Users/mattbrown/projects/social-elif/client/src/actions/types.js":"13","/Users/mattbrown/projects/social-elif/client/src/reducers/auth.js":"14","/Users/mattbrown/projects/social-elif/client/src/actions/auth.js":"15","/Users/mattbrown/projects/social-elif/client/src/reducers/profile.js":"16","/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Dashboard.js":"17","/Users/mattbrown/projects/social-elif/client/src/actions/profile.js":"18","/Users/mattbrown/projects/social-elif/client/src/components/routing/PrivateRoute.js":"19","/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/CreateProfile.js":"20","/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/EditProfile.js":"21","/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/AddExperience.js":"22","/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/AddEducation.js":"23","/Users/mattbrown/projects/social-elif/client/src/utils/setAuthToken.js":"24","/Users/mattbrown/projects/social-elif/client/src/components/layout/Spinner.js":"25","/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Experience.js":"26","/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Education.js":"27","/Users/mattbrown/projects/social-elif/client/src/components/profiles/Profiles.js":"28","/Users/mattbrown/projects/social-elif/client/src/components/profiles/ProfileItem.js":"29","/Users/mattbrown/projects/social-elif/client/src/components/profile/Profile.js":"30","/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileTop.js":"31","/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileAbout.js":"32","/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileExperience.js":"33","/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileGithub.js":"34","/Users/mattbrown/projects/social-elif/client/src/reducers/post.js":"35","/Users/mattbrown/projects/social-elif/client/src/actions/post.js":"36","/Users/mattbrown/projects/social-elif/client/src/components/posts/Posts.js":"37","/Users/mattbrown/projects/social-elif/client/src/components/posts/PostItem.js":"38","/Users/mattbrown/projects/social-elif/client/src/components/posts/PostForm.js":"39","/Users/mattbrown/projects/social-elif/client/src/components/post/Post.js":"40","/Users/mattbrown/projects/social-elif/client/src/components/post/CommentItem.js":"41","/Users/mattbrown/projects/social-elif/client/src/components/dashboard/DashboardActions.js":"42","/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileEducation.js":"43","/Users/mattbrown/projects/social-elif/client/src/components/post/CommentForm.js":"44","/Users/mattbrown/projects/social-elif/client/src/components/layout/NotFound.js":"45","/Users/mattbrown/projects/social-elif/client/src/components/routing/Routes.js":"46"},{"size":966,"mtime":1610061692865,"results":"47","hashOfConfig":"48"},{"size":1135,"mtime":1609945211582,"results":"49","hashOfConfig":"48"},{"size":1564,"mtime":1610057412888,"results":"50","hashOfConfig":"48"},{"size":362,"mtime":1609799687371,"results":"51","hashOfConfig":"48"},{"size":1954,"mtime":1610059590831,"results":"52","hashOfConfig":"48"},{"size":3214,"mtime":1610059602002,"results":"53","hashOfConfig":"48"},{"size":428,"mtime":1609810187166,"results":"54","hashOfConfig":"48"},{"size":386,"mtime":1609865407419,"results":"55","hashOfConfig":"48"},{"size":221,"mtime":1610047752225,"results":"56","hashOfConfig":"48"},{"size":374,"mtime":1609865883809,"results":"57","hashOfConfig":"48"},{"size":370,"mtime":1609867665650,"results":"58","hashOfConfig":"48"},{"size":482,"mtime":1609867365117,"results":"59","hashOfConfig":"48"},{"size":1081,"mtime":1610055447105,"results":"60","hashOfConfig":"48"},{"size":1004,"mtime":1609972275431,"results":"61","hashOfConfig":"48"},{"size":2041,"mtime":1610059521405,"results":"62","hashOfConfig":"48"},{"size":905,"mtime":1610043139587,"results":"63","hashOfConfig":"48"},{"size":1979,"mtime":1610036609968,"results":"64","hashOfConfig":"48"},{"size":5575,"mtime":1610119219333,"results":"65","hashOfConfig":"48"},{"size":631,"mtime":1609882307013,"results":"66","hashOfConfig":"48"},{"size":6969,"mtime":1610059619183,"results":"67","hashOfConfig":"48"},{"size":8152,"mtime":1610059630848,"results":"68","hashOfConfig":"48"},{"size":3486,"mtime":1610036779466,"results":"69","hashOfConfig":"48"},{"size":3522,"mtime":1610059610695,"results":"70","hashOfConfig":"48"},{"size":242,"mtime":1609873545303,"results":"71","hashOfConfig":"48"},{"size":255,"mtime":1609946150861,"results":"72","hashOfConfig":"48"},{"size":1395,"mtime":1609972412498,"results":"73","hashOfConfig":"48"},{"size":1408,"mtime":1609972554245,"results":"74","hashOfConfig":"48"},{"size":1315,"mtime":1610036592959,"results":"75","hashOfConfig":"48"},{"size":967,"mtime":1610036633186,"results":"76","hashOfConfig":"48"},{"size":2732,"mtime":1610119399469,"results":"77","hashOfConfig":"48"},{"size":1838,"mtime":1610039099581,"results":"78","hashOfConfig":"48"},{"size":819,"mtime":1610039494331,"results":"79","hashOfConfig":"48"},{"size":699,"mtime":1610041357833,"results":"80","hashOfConfig":"48"},{"size":1694,"mtime":1610043066711,"results":"81","hashOfConfig":"48"},{"size":1549,"mtime":1610059643917,"results":"82","hashOfConfig":"48"},{"size":3479,"mtime":1610059547220,"results":"83","hashOfConfig":"48"},{"size":970,"mtime":1610053707537,"results":"84","hashOfConfig":"48"},{"size":2459,"mtime":1610054744612,"results":"85","hashOfConfig":"48"},{"size":997,"mtime":1610053808529,"results":"86","hashOfConfig":"48"},{"size":1189,"mtime":1610056626174,"results":"87","hashOfConfig":"48"},{"size":1377,"mtime":1610057235715,"results":"88","hashOfConfig":"48"},{"size":615,"mtime":1609952792663,"results":"89","hashOfConfig":"48"},{"size":774,"mtime":1610041440117,"results":"90","hashOfConfig":"48"},{"size":1078,"mtime":1610056142882,"results":"91","hashOfConfig":"48"},{"size":480,"mtime":1610061816393,"results":"92","hashOfConfig":"48"},{"size":1685,"mtime":1610061727535,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"be8bbr",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/social-elif/client/src/App.js",["199"],"/Users/mattbrown/projects/social-elif/client/src/components/layout/Landing.js",[],["200","201"],"/Users/mattbrown/projects/social-elif/client/src/components/layout/NavBar.js",["202"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\nexport const NavBar = ({ logout, auth: { isAuthenticated, loading } }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/posts\">Posts</Link>\n      </li>\n      <li>\n        <Link to=\"/dashboard\">\n          <i className=\"fas fa-user\" />\n          <span className=\"hide-sm\"> Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        {\" \"}\n        <a onClick={logout} href=\"\">\n          <i className=\"fas fa-sign-out-alt\"></i>{\" \"}\n          <span className=\"hide-sm\">Log Out</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </ul>\n  );\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\"></i> laces\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, { logout })(NavBar);\n",["203","204"],"/Users/mattbrown/projects/social-elif/client/src/reportWebVitals.js",[],["205","206"],"/Users/mattbrown/projects/social-elif/client/src/components/auth/Login.js",[],["207","208"],"/Users/mattbrown/projects/social-elif/client/src/components/auth/Register.js",["209"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport FileBase from \"react-file-base64\";\n\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    profilePicture: \"\",\n  });\n\n  const { name, email, password, password2, profilePicture } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({ name, email, password, profilePicture });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n      {\" \"}\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4 class=\"text-primary\">Profile Picture</h4>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setFormData({ ...formData, profilePicture: base64 })\n            }\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            required\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            required\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","/Users/mattbrown/projects/social-elif/client/src/index.js",[],"/Users/mattbrown/projects/social-elif/client/src/store.js",[],"/Users/mattbrown/projects/social-elif/client/src/reducers/index.js",[],["210","211"],"/Users/mattbrown/projects/social-elif/client/src/reducers/alert.js",["212"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/mattbrown/projects/social-elif/client/src/actions/alert.js",["213"],"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuidv4();\n  dispatch({\n    type: SET_ALERT,\n    payload: {\n      msg,\n      alertType,\n      id,\n    },\n  });\n\n  setTimeout(() => dispatch({ type: \"REMOVE_ALERT\", payload: id }), timeout);\n};\n","/Users/mattbrown/projects/social-elif/client/src/components/layout/Alert.js",[],"/Users/mattbrown/projects/social-elif/client/src/actions/types.js",[],"/Users/mattbrown/projects/social-elif/client/src/reducers/auth.js",[],"/Users/mattbrown/projects/social-elif/client/src/actions/auth.js",[],"/Users/mattbrown/projects/social-elif/client/src/reducers/profile.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Dashboard.js",[],"/Users/mattbrown/projects/social-elif/client/src/actions/profile.js",["214"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_PROFILES,\n  GET_REPOS,\n} from \"./types\";\n\n// Get current user profile\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// GET all profiles\n\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// GET profile by ID\n\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    console.log(\"res1\");\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    console.log(\"res2\", res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log({ err });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// GET profile by ID\n\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create/Update Profile\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Experience\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Education\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Experience\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Education\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Account and Clear Profile\n\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm(\"Are you sure? This action can NOT be undone\")) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n      dispatch({\n        type: ACCOUNT_DELETED,\n      });\n      dispatch(setAlert(\"Account has been deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","/Users/mattbrown/projects/social-elif/client/src/components/routing/PrivateRoute.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/CreateProfile.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/EditProfile.js",["215"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.twitter ? \"\" : profile.twitter,\n      facebook: loading || !profile.facebook ? \"\" : profile.facebook,\n      linkedin: loading || !profile.linkedin ? \"\" : profile.linkedin,\n      youtube: loading || !profile.youtube ? \"\" : profile.youtube,\n      instagram: loading || !profile.instagram ? \"\" : profile.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Recent Grad\">Recent Grad</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => {\n              toggleSocialInputs(!displaySocialInputs);\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            {\" \"}\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/AddExperience.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile-forms/AddEducation.js",[],"/Users/mattbrown/projects/social-elif/client/src/utils/setAuthToken.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/layout/Spinner.js",["216"],"import React, { Fragment } from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n      alt=\"Loading\"\n    />\n  </Fragment>\n);\n","/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Experience.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/dashboard/Education.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profiles/Profiles.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profiles/ProfileItem.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/Profile.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileTop.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileAbout.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileExperience.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileGithub.js",[],"/Users/mattbrown/projects/social-elif/client/src/reducers/post.js",[],"/Users/mattbrown/projects/social-elif/client/src/actions/post.js",["217","218"],"import axios from \"axios\";\n\nimport { setAlert } from \"./alert\";\n\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n// GET posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({ type: GET_POSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// GET post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({ type: GET_POST, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n\n    dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n\n    dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// DELETE post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n\n    dispatch({ type: DELETE_POST, payload: id });\n    dispatch(setAlert(\"Post deleted\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// ADD post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n\n    dispatch({ type: ADD_POST, payload: res.data });\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// ADD comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comments/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({ type: ADD_COMMENT, payload: res.data });\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// DELETE comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({ type: REMOVE_COMMENT, payload: commentId });\n    dispatch(setAlert(\"Comment Removed\", \"danger\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/mattbrown/projects/social-elif/client/src/components/posts/Posts.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/posts/PostItem.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/posts/PostForm.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/post/Post.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/post/CommentItem.js",["219"],"/Users/mattbrown/projects/social-elif/client/src/components/dashboard/DashboardActions.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/profile/ProfileEducation.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/post/CommentForm.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/layout/NotFound.js",[],"/Users/mattbrown/projects/social-elif/client/src/components/routing/Routes.js",[],{"ruleId":"220","severity":1,"message":"221","line":2,"column":42,"nodeType":"222","messageId":"223","endLine":2,"endColumn":48},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":24,"column":9,"nodeType":"230","endLine":24,"endColumn":37},{"ruleId":"224","replacedBy":"231"},{"ruleId":"226","replacedBy":"232"},{"ruleId":"224","replacedBy":"233"},{"ruleId":"226","replacedBy":"234"},{"ruleId":"224","replacedBy":"235"},{"ruleId":"226","replacedBy":"236"},{"ruleId":"220","severity":1,"message":"237","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":13},{"ruleId":"224","replacedBy":"238"},{"ruleId":"226","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":5,"column":1,"nodeType":"242","endLine":15,"endColumn":2},{"ruleId":"220","severity":1,"message":"243","line":1,"column":21,"nodeType":"222","messageId":"223","endLine":1,"endColumn":33},{"ruleId":"220","severity":1,"message":"244","line":225,"column":13,"nodeType":"222","messageId":"223","endLine":225,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":47,"column":6,"nodeType":"247","endLine":47,"endColumn":34,"suggestions":"248"},{"ruleId":"240","severity":1,"message":"249","line":4,"column":1,"nodeType":"242","endLine":12,"endColumn":3},{"ruleId":"220","severity":1,"message":"244","line":75,"column":11,"nodeType":"222","messageId":"223","endLine":75,"endColumn":14},{"ruleId":"220","severity":1,"message":"244","line":134,"column":11,"nodeType":"222","messageId":"223","endLine":134,"endColumn":14},{"ruleId":"220","severity":1,"message":"250","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["251"],"no-negated-in-lhs",["252"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["251"],["252"],["251"],["252"],["251"],["252"],"'axios' is defined but never used.",["251"],["252"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REMOVE_ALERT' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["253"],"Assign arrow function to a variable before exporting as module default","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",{"range":"256","text":"257"},[1626,1654],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]"]